# Backend service Dockerfile
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies with optimizations
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY backend/requirements.prod.txt ./requirements.txt

# Install Python dependencies with optimizations for Railway (production only)
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY backend/ ./

# Include database init SQL and setup script
COPY backend/setup_db.py /app/setup_db.py
COPY database_setup.sql /app/backend/database_setup.sql

# Copy entrypoint script
COPY backend/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Create non-root user
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Accept build args for environment variables
ARG DATABASE_URL
ARG REDIS_URL
ARG ENVIRONMENT
ARG DEBUG
ARG AUTO_INIT_DB
ARG DB_INIT_SQL
ARG ANTHROPIC_API_KEY
ARG OPENAI_API_KEY
ARG ALLOWED_ORIGINS
ARG SECRET_KEY
ARG JWT_SECRET_KEY
ARG ALGORITHM
ARG ACCESS_TOKEN_EXPIRE_MINUTES
ARG GOOGLE_OAUTH_CLIENT_ID
ARG GOOGLE_OAUTH_CLIENT_SECRET
ARG GOOGLE_API_KEY
ARG PERPLEXITY_API_KEY
ARG STRIPE_SECRET_KEY
ARG STRIPE_PUBLISHABLE_KEY
ARG ENABLE_REAL_TRACKING
ARG TRACKING_API_ENDPOINT
ARG TRACKING_SCRIPT_VERSION
ARG GEOIP_PATH
ARG CLAUDE_MODEL
ARG GPT_MODEL
ARG MAX_TOKENS
ARG TEMPERATURE
ARG REQUEST_TIMEOUT
ARG CACHE_TTL
ARG CACHE_MAX_SIZE
ARG MAX_UPLOAD_SIZE
ARG ALLOWED_LOG_FORMATS
ARG TEMP_UPLOAD_PATH
ARG MAX_CONCURRENT_ANALYSES
ARG ANALYSIS_TIMEOUT
ARG MAX_QUERIES_PER_ANALYSIS
ARG MAX_CONTENT_CHUNKS
ARG ENABLE_METRICS
ARG METRICS_PORT
ARG HEALTH_CHECK_INTERVAL
ARG USE_REAL_TRACKING
ARG SMTP_HOST
ARG SMTP_PORT

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8000
ENV DATABASE_URL=$DATABASE_URL
ENV REDIS_URL=$REDIS_URL
ENV ENVIRONMENT=$ENVIRONMENT
ENV DEBUG=$DEBUG
ENV AUTO_INIT_DB=$AUTO_INIT_DB
ENV DB_INIT_SQL=$DB_INIT_SQL
ENV ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY
ENV OPENAI_API_KEY=$OPENAI_API_KEY
ENV ALLOWED_ORIGINS=$ALLOWED_ORIGINS
ENV SECRET_KEY=$SECRET_KEY
ENV JWT_SECRET_KEY=$JWT_SECRET_KEY
ENV ALGORITHM=$ALGORITHM
ENV ACCESS_TOKEN_EXPIRE_MINUTES=$ACCESS_TOKEN_EXPIRE_MINUTES
ENV GOOGLE_OAUTH_CLIENT_ID=$GOOGLE_OAUTH_CLIENT_ID
ENV GOOGLE_OAUTH_CLIENT_SECRET=$GOOGLE_OAUTH_CLIENT_SECRET
ENV GOOGLE_API_KEY=$GOOGLE_API_KEY
ENV PERPLEXITY_API_KEY=$PERPLEXITY_API_KEY
ENV STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY
ENV STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY
ENV ENABLE_REAL_TRACKING=$ENABLE_REAL_TRACKING
ENV TRACKING_API_ENDPOINT=$TRACKING_API_ENDPOINT
ENV TRACKING_SCRIPT_VERSION=$TRACKING_SCRIPT_VERSION
ENV GEOIP_PATH=$GEOIP_PATH
ENV CLAUDE_MODEL=$CLAUDE_MODEL
ENV GPT_MODEL=$GPT_MODEL
ENV MAX_TOKENS=$MAX_TOKENS
ENV TEMPERATURE=$TEMPERATURE
ENV REQUEST_TIMEOUT=$REQUEST_TIMEOUT
ENV CACHE_TTL=$CACHE_TTL
ENV CACHE_MAX_SIZE=$CACHE_MAX_SIZE
ENV MAX_UPLOAD_SIZE=$MAX_UPLOAD_SIZE
ENV ALLOWED_LOG_FORMATS=$ALLOWED_LOG_FORMATS
ENV TEMP_UPLOAD_PATH=$TEMP_UPLOAD_PATH
ENV MAX_CONCURRENT_ANALYSES=$MAX_CONCURRENT_ANALYSES
ENV ANALYSIS_TIMEOUT=$ANALYSIS_TIMEOUT
ENV MAX_QUERIES_PER_ANALYSIS=$MAX_QUERIES_PER_ANALYSIS
ENV MAX_CONTENT_CHUNKS=$MAX_CONTENT_CHUNKS
ENV ENABLE_METRICS=$ENABLE_METRICS
ENV METRICS_PORT=$METRICS_PORT
ENV HEALTH_CHECK_INTERVAL=$HEALTH_CHECK_INTERVAL
ENV USE_REAL_TRACKING=$USE_REAL_TRACKING
ENV SMTP_HOST=$SMTP_HOST
ENV SMTP_PORT=$SMTP_PORT

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start command (uses entrypoint to optionally install dev dependencies post-deploy)
CMD ["sh", "/app/entrypoint.sh"]
