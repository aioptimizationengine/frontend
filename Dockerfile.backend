# Backend service Dockerfile
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies with optimizations
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libpq-dev \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY backend/requirements.prod.txt ./requirements.txt

# Install Python dependencies with optimizations for Railway (production only)
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend source code
COPY backend/ ./

# Include database init SQL and setup script
COPY backend/setup_db.py /app/setup_db.py
COPY database_setup.sql /app/backend/database_setup.sql

# Copy entrypoint script
COPY backend/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Create non-root user
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Set environment variables
ENV PYTHONPATH=/app
ENV PORT=8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start command (uses entrypoint to optionally install dev dependencies post-deploy)
CMD ["sh", "/app/entrypoint.sh"]
